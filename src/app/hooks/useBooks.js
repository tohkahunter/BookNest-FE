// src/hooks/queries/useBooks.js
import { useQuery } from "@tanstack/react-query";
import { QUERY_KEYS } from "../../lib/queryKeys";
import * as bookService from "../../services/bookService";

// Hook chÃ­nh Ä‘á»ƒ láº¥y táº¥t cáº£ sÃ¡ch
export const useBooks = (options = {}) => {
  return useQuery({
    queryKey: QUERY_KEYS.BOOKS,
    queryFn: bookService.getAllBooks,
    staleTime: 5 * 60 * 1000, // 5 phÃºt
    cacheTime: 10 * 60 * 1000, // 10 phÃºt
    ...options,
  });
};

// Hook Ä‘á»ƒ láº¥y sÃ¡ch phá»• biáº¿n
export const usePopularBooks = (limit = 10, options = {}) => {
  return useQuery({
    queryKey: QUERY_KEYS.BOOKS_POPULAR(limit),
    queryFn: () => bookService.getPopularBooks(limit),
    staleTime: 15 * 60 * 1000, // 15 phÃºt
    ...options,
  });
};

// Hook Ä‘á»ƒ láº¥y sÃ¡ch má»›i
export const useRecentBooks = (limit = 10, options = {}) => {
  return useQuery({
    queryKey: QUERY_KEYS.BOOKS_RECENT(limit),
    queryFn: () => bookService.getRecentBooks(limit),
    staleTime: 5 * 60 * 1000, // 5 phÃºt
    ...options,
  });
};

// ðŸ”§ FIXED: Hook Ä‘á»ƒ search sÃ¡ch
export const useSearchBooks = (searchTerm, options = {}) => {
  return useQuery({
    queryKey: QUERY_KEYS.BOOKS_SEARCH(searchTerm),
    queryFn: () => bookService.searchBooks(searchTerm), // âœ… Use bookService.searchBooks
    enabled: !!searchTerm && searchTerm.length > 0,
    staleTime: 2 * 60 * 1000, // 2 phÃºt
    cacheTime: 5 * 60 * 1000, // 5 phÃºt
    ...options,
  });
};

// Hook Ä‘á»ƒ search sÃ¡ch vá»›i thÃ´ng tin tÃ¡c giáº£
export const useSearchBooksWithAuthors = (searchTerm, options = {}) => {
  return useQuery({
    queryKey: [...QUERY_KEYS.BOOKS_SEARCH(searchTerm), "with-authors"],
    queryFn: () => bookService.searchBooksWithAuthors(searchTerm),
    enabled: !!searchTerm && searchTerm.length > 0,
    staleTime: 2 * 60 * 1000,
    cacheTime: 5 * 60 * 1000,
    ...options,
  });
};

// Hook Ä‘á»ƒ láº¥y sÃ¡ch theo genre
export const useBooksByGenre = (genreId, options = {}) => {
  return useQuery({
    queryKey: QUERY_KEYS.BOOKS_BY_GENRE(genreId),
    queryFn: () => bookService.getBooksByGenre(genreId),
    enabled: !!genreId,
    staleTime: 5 * 60 * 1000,
    ...options,
  });
};

// Hook Ä‘á»ƒ láº¥y sÃ¡ch theo author
export const useBooksByAuthor = (authorId, options = {}) => {
  return useQuery({
    queryKey: QUERY_KEYS.BOOKS_BY_AUTHOR(authorId),
    queryFn: () => bookService.getBooksByAuthor(authorId),
    enabled: !!authorId,
    staleTime: 5 * 60 * 1000,
    cacheTime: 10 * 60 * 1000,
    ...options,
  });
};

// Hook Ä‘á»ƒ láº¥y 1 cuá»‘n sÃ¡ch
export const useBook = (bookId, options = {}) => {
  return useQuery({
    queryKey: QUERY_KEYS.BOOK(bookId),
    queryFn: () => bookService.getBookById(bookId),
    enabled: !!bookId,
    staleTime: 10 * 60 * 1000,
    ...options,
  });
};

// Hook Ä‘á»ƒ láº¥y books vá»›i details
export const useBooksWithDetails = (options = {}) => {
  return useQuery({
    queryKey: [...QUERY_KEYS.BOOKS, "with-details"],
    queryFn: bookService.getBooksWithDetails,
    staleTime: 5 * 60 * 1000,
    cacheTime: 10 * 60 * 1000,
    ...options,
  });
};
